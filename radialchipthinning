<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Radial Chip Thinning Calculator</title>
    <style>
        :root {
            --primary: #2563eb;
            --primary-dark: #1d4ed8;
            --primary-light: #dbeafe;
            --success: #10b981;
            --success-light: #d1fae5;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-400: #9ca3af;
            --gray-500: #6b7280;
            --gray-600: #4b5563;
            --gray-700: #374151;
            --gray-800: #1f2937;
            --gray-900: #111827;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, 
                         Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        
        body {
            background-color: var(--gray-50);
            color: var(--gray-800);
            line-height: 1.5;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }
        
        header {
            background: linear-gradient(to right, var(--primary), var(--primary-dark));
            color: white;
            padding: 1.5rem 0;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        h1 {
            font-size: 1.5rem;
            font-weight: 700;
            display: flex;
            align-items: center;
        }
        
        h1 svg {
            margin-right: 0.5rem;
        }
        
        .header-subtitle {
            color: rgba(255, 255, 255, 0.8);
            margin-top: 0.25rem;
            font-size: 0.875rem;
        }
        
        .header-actions {
            display: flex;
            gap: 0.75rem;
        }
        
        .btn-header {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: none;
            padding: 0.5rem 0.75rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            transition: background-color 0.2s;
        }
        
        .btn-header:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        
        .btn-header svg {
            margin-right: 0.25rem;
        }
        
        main {
            padding: 1.5rem 0;
        }
        
        .calculator-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.5rem;
            margin-top: 1.5rem;
        }
        
        @media (min-width: 768px) {
            .calculator-grid {
                grid-template-columns: 2fr 1fr;
            }
        }
        
        .card {
            background: white;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            padding: 1.5rem;
        }
        
        .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--gray-800);
            margin-bottom: 1rem;
        }
        
        .units-toggle {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 1.5rem;
        }
        
        .toggle-container {
            background-color: var(--gray-100);
            border-radius: 0.5rem;
            padding: 0.25rem;
            display: inline-flex;
        }
        
        .toggle-btn {
            padding: 0.25rem 0.75rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            border: none;
            background: transparent;
            color: var(--gray-700);
            cursor: pointer;
        }
        
        .toggle-btn.active {
            background-color: var(--primary);
            color: white;
        }
        
        .input-group {
            margin-bottom: 1.5rem;
            background-color: var(--gray-50);
            padding: 1rem;
            border-radius: 0.5rem;
        }
        
        .input-group-title {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--gray-700);
            margin-bottom: 0.75rem;
        }
        
        .input-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        @media (min-width: 640px) {
            .input-grid {
                grid-template-columns: 1fr 1fr;
            }
        }
        
        .form-group {
            margin-bottom: 1rem;
        }
        
        .form-group label {
            display: block;
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--gray-700);
            margin-bottom: 0.25rem;
        }
        
        .form-control {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid var(--gray-300);
            border-radius: 0.375rem;
            font-size: 0.875rem;
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        
        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px var(--primary-light);
        }
        
        .range-container {
            display: flex;
            align-items: center;
        }
        
        .range-input {
            flex-grow: 1;
            margin-right: 0.75rem;
        }
        
        .range-value {
            min-width: 2.5rem;
            font-size: 0.875rem;
            color: var(--gray-700);
            text-align: right;
        }
        
        .actions {
            display: flex;
            justify-content: space-between;
            margin-top: 1rem;
        }
        
        .btn {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            display: flex;
            align-items: center;
            transition: all 0.2s;
            border: none;
        }
        
        .btn-reset {
            background-color: var(--gray-200);
            color: var(--gray-700);
        }
        
        .btn-reset:hover {
            background-color: var(--gray-300);
        }
        
        .btn-calculate {
            background-color: var(--primary);
            color: white;
            padding: 0.5rem 1.5rem;
        }
        
        .btn-calculate:hover {
            background-color: var(--primary-dark);
        }
        
        .btn svg {
            margin-right: 0.25rem;
        }
        
        .results-placeholder {
            min-height: 16rem;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--gray-400);
            text-align: center;
            padding: 1rem;
        }
        
        .results-content {
            display: none;
        }
        
        .gauge-container {
            display: flex;
            justify-content: center;
            margin-bottom: 1.5rem;
        }
        
        .gauge {
            position: relative;
            width: 10rem;
            height: 10rem;
        }
        
        .result-box {
            background-color: var(--primary-light);
            padding: 0.75rem;
            border-radius: 0.375rem;
            margin-bottom: 0.75rem;
            display: flex;
            justify-content: space-between;
        }
        
        .result-box.success {
            background-color: var(--success-light);
        }
        
        .result-label {
            font-size: 0.875rem;
            color: var(--primary-dark);
        }
        
        .result-value {
            font-weight: 600;
            color: var(--primary-dark);
        }
        
        .result-box.success .result-label,
        .result-box.success .result-value {
            color: var(--success);
        }
        
        .visual-container {
            margin-top: 1rem;
            background-color: var(--gray-50);
            padding: 0.75rem;
            border-radius: 0.375rem;
        }
        
        .visual-title {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--gray-700);
            margin-bottom: 0.5rem;
        }
        
        .visual-diagram {
            position: relative;
            height: 6rem;
            margin-top: 0.5rem;
        }
        
        .tool {
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 4rem;
            height: 4rem;
            border-radius: 50%;
            border: 0.25rem solid var(--gray-300);
            background-color: white;
        }
        
        .workpiece {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 3rem;
            background-color: var(--gray-200);
            border-radius: 0.375rem;
        }
        
        .engagement {
            position: absolute;
            bottom: 0;
            left: 50%;
            height: 3rem;
            background-color: var(--primary-light);
            border-radius: 0.375rem;
            transform: translateX(-100%);
        }
        
        .btn-save {
            width: 100%;
            margin-top: 1rem;
            background-color: var(--gray-200);
            color: var(--gray-700);
            justify-content: center;
        }
        
        .btn-save:hover {
            background-color: var(--gray-300);
        }
        
        .info-box {
            margin-top: 1.5rem;
            background-color: var(--gray-100);
            border-radius: 0.5rem;
            padding: 1rem;
        }
        
        .info-title {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--gray-700);
            margin-bottom: 0.5rem;
        }
        
        .info-text {
            font-size: 0.875rem;
            color: var(--gray-600);
        }
        
        /* For saved configurations */
        .saved-configs {
            margin-top: 1.5rem;
        }
        
        .config-item {
            background-color: var(--gray-100);
            border-radius: 0.375rem;
            padding: 0.75rem;
            margin-bottom: 0.5rem;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        
        .config-item:hover {
            background-color: var(--gray-200);
        }
        
        .config-name {
            font-weight: 500;
            color: var(--gray-800);
            margin-bottom: 0.25rem;
        }
        
        .config-params {
            font-size: 0.75rem;
            color: var(--gray-600);
        }
        
        /* Tooltips */
        .tooltip {
            position: relative;
            display: inline-block;
            cursor: help;
        }
        
        .tooltip-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 1rem;
            height: 1rem;
            border-radius: 50%;
            background-color: var(--gray-300);
            color: var(--gray-700);
            font-size: 0.625rem;
            font-weight: bold;
            margin-left: 0.25rem;
        }
        
        .tooltip-text {
            visibility: hidden;
            width: 200px;
            background-color: var(--gray-700);
            color: white;
            text-align: center;
            border-radius: 0.375rem;
            padding: 0.5rem;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -100px;
            opacity: 0;
            transition: opacity 0.3s;
            font-size: 0.75rem;
            pointer-events: none;
        }
        
        .tooltip:hover .tooltip-text {
            visibility: visible;
            opacity: 1;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="header-content">
                <div>
                    <h1>
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
                            <line x1="8" y1="21" x2="16" y2="21"></line>
                            <line x1="12" y1="17" x2="12" y2="21"></line>
                        </svg>
                        Radial Chip Thinning Calculator
                    </h1>
                    <p class="header-subtitle">Optimize your milling parameters for consistent material removal</p>
                </div>
                <div class="header-actions">
                    <button class="btn-header" id="helpBtn">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                        Help
                    </button>
                </div>
            </div>
        </div>
    </header>
    
    <main>
        <div class="container">
            <div class="calculator-grid">
                <!-- Input Panel -->
                <div class="card">
                    <h2 class="card-title">Input Parameters</h2>
                    
                    <!-- Units Toggle -->
                    <div class="units-toggle">
                        <div class="toggle-container">
                            <button class="toggle-btn active" id="metricBtn">Metric</button>
                            <button class="toggle-btn" id="imperialBtn">Imperial</button>
                        </div>
                    </div>
                    
                    <!-- Tool Parameters -->
                    <div class="input-group">
                        <h3 class="input-group-title">Tool Information</h3>
                        <div class="input-grid">
                            <div class="form-group">
                                <label for="toolDiameter">
                                    Tool Diameter <span id="diameterUnit">(mm)</span>
                                    <span class="tooltip">
                                        <span class="tooltip-icon">?</span>
                                        <span class="tooltip-text">The cutting diameter of your tool</span>
                                    </span>
                                </label>
                                <input type="number" id="toolDiameter" class="form-control" value="10" min="0.1" step="0.1">
                            </div>
                            <div class="form-group">
                                <label for="numFlutes">
                                    Number of Flutes
                                    <span class="tooltip">
                                        <span class="tooltip-icon">?</span>
                                        <span class="tooltip-text">The number of cutting edges on your tool</span>
                                    </span>
                                </label>
                                <input type="number" id="numFlutes" class="form-control" value="4" min="1" step="1">
                            </div>
                        </div>
                    </div>
                    
                    <!-- Cut Parameters -->
                    <div class="input-group">
                        <h3 class="input-group-title">Cut Parameters</h3>
                        <div class="form-group">
                            <label for="radialEngagement">
                                Radial Engagement (% of diameter)
                                <span class="tooltip">
                                    <span class="tooltip-icon">?</span>
                                    <span class="tooltip-text">The percentage of the tool diameter engaged in the cut</span>
                                </span>
                            </label>
                            <div class="range-container">
                                <input type="range" id="radialEngagement" class="range-input" value="50" min="1" max="100">
                                <span class="range-value" id="engagementValue">50%</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="axialDepth">
                                Axial Depth of Cut <span id="axialUnit">(mm)</span>
                                <span class="tooltip">
                                    <span class="tooltip-icon">?</span>
                                    <span class="tooltip-text">The depth of the cut along the tool axis</span>
                                </span>
                            </label>
                            <input type="number" id="axialDepth" class="form-control" value="5" min="0.1" step="0.1">
                        </div>
                        <div class="form-group">
                            <label for="feedPerTooth">
                                Feed per Tooth <span id="feedUnit">(mm)</span>
                                <span class="tooltip">
                                    <span class="tooltip-icon">?</span>
                                    <span class="tooltip-text">The programmed feed per tooth</span>
                                </span>
                            </label>
                            <input type="number" id="feedPerTooth" class="form-control" value="0.1" min="0.001" step="0.001">
                        </div>
                        <div class="form-group">
                            <label for="spindleSpeed">
                                Spindle Speed (RPM)
                                <span class="tooltip">
                                    <span class="tooltip-icon">?</span>
                                    <span class="tooltip-text">The rotational speed of the spindle</span>
                                </span>
                            </label>
                            <input type="number" id="spindleSpeed" class="form-control" value="1000" min="1" step="10">
                        </div>
                    </div>
                    
                    <!-- Material Selection (Optional) -->
                    <div class="input-group">
                        <h3 class="input-group-title">Material Information (Optional)</h3>
                        <div class="form-group">
                            <label for="materialType">
                                Workpiece Material
                                <span class="tooltip">
                                    <span class="tooltip-icon">?</span>
                                    <span class="tooltip-text">Select material for recommended chip thickness ranges</span>
                                </span>
                            </label>
                            <select id="materialType" class="form-control">
                                <option value="">Select material (optional)</option>
                                <option value="aluminum">Aluminum</option>
                                <option value="steel-mild">Steel (Mild)</option>
                                <option value="steel-stainless">Steel (Stainless)</option>
                                <option value="titanium">Titanium</option>
                                <option value="plastic">Plastic</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Action Buttons -->
                    <div class="actions">
                        <button id="resetBtn" class="btn btn-reset">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M21.5 2v6h-6M2.5 22v-6h6M2 11.5a10 10 0 0 1 18.8-4.3M22 12.5a10 10 0 0 1-18.8 4.2"/>
                            </svg>
                            Reset
                        </button>
                        <button id="calculateBtn" class="btn btn-calculate">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
                                <line x1="8" y1="21" x2="16" y2="21"></line>
                                <line x1="12" y1="17" x2="12" y2="21"></line>
                            </svg>
                            Calculate
                        </button>
                    </div>
                </div>
                
                <!-- Results Panel -->
                <div class="card">
                    <h2 class="card-title">Results</h2>
                    
                    <div id="resultsPlaceholder" class="results-placeholder">
                        Enter parameters and click Calculate to see results
                    </div>
                    
                    <div id="resultsContent" class="results-content">
                        <!-- Gauge Visualization -->
                        <div class="gauge-container">
                            <div class="gauge">
                                <svg viewBox="0 0 100 100">
                                    <path d="M10,50 A40,40 0 1,1 90,50" fill="none" stroke="#e5e7eb" stroke-width="8" stroke-linecap="round"></path>
                                    <path id="gaugeFill" d="M10,50 A40,40 0 1,1 90,50" fill="none" stroke="#3b82f6" stroke-width="8" stroke-linecap="round" stroke-dasharray="0, 126.8"></path>
                                    <text id="gaugeValue" x="50" y="60" text-anchor="middle" class="text-2xl font-bold" fill="#374151">0.00</text>
                                    <text x="50" y="75" text-anchor="middle" class="text-xs" fill="#6b7280">Chip Thinning Factor</text>
                                </svg>
                            </div>
                        </div>
                        
                        <!-- Results Data -->
                        <div class="result-box">
                            <span class="result-label">Effective Chip Thickness:</span>
                            <span class="result-value" id="chipThickness">0.000 mm</span>
                        </div>
                        
                        <div class="result-box success">
                            <span class="result-label">Adjusted Feed Rate:</span>
                            <span class="result-value" id="adjustedFeed">0 mm/min</span>
                        </div>
                        
                        <div class="result-box">
                            <span class="result-label">Programmed Feed Rate:</span>
                            <span class="result-value" id="programmedFeed">0 mm/min</span>
                        </div>
                        
                        <div class="result-box success">
                            <span class="result-label">Material Removal Rate:</span>
                            <span class="result-value" id="removalRate">0 cm³/min</span>
                        </div>
                        
                        <!-- Visual Diagram -->
                        <div class="visual-container">
                            <h3 class="visual-title">Visual Representation</h3>
                            <div class="visual-diagram">
                                <!-- Tool -->
                                <div class="tool"></div>
                                
                                <!-- Workpiece -->
                                <div class="workpiece"></div>
                                
                                <!-- Engagement -->
                                <div class="engagement" id="engagementVisual" style="width: 25%;"></div>
                            </div>
                        </div>
                        
                        <!-- Save Button -->
                        <button class="btn btn-save">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
                                <polyline points="17 21 17 13 7 13 7 21"></polyline>
                                <polyline points="7 3 7 8 15 8"></polyline>
                            </svg>
                            Save Configuration
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Info Section -->
            <div class="info-box">
                <h3 class="info-title">What is Radial Chip Thinning?</h3>
                <p class="info-text">
                    Radial chip thinning occurs when the radial engagement of a milling cutter is less than 50% of its diameter.
                    This results in a chip thickness that is less than the programmed feed per tooth. 
                    When the cutter is not fully engaged with the workpiece (partial width of cut), the actual chip thickness 
                    is reduced due to the angle at which the cutting edge enters the material. This calculator helps you adjust 
                    feed rates to maintain consistent chip thickness regardless of radial engagement.
                </p>
            </div>
        </div>
    </main>

    <script>
        // DOM Elements
        const metricBtn = document.getElementById('metricBtn');
        const imperialBtn = document.getElementById('imperialBtn');
        const diameterUnit = document.getElementById('diameterUnit');
        const axialUnit = document.getElementById('axialUnit');
        const feedUnit = document.getElementById('feedUnit');
        const toolDiameter = document.getElementById('toolDiameter');
        const numFlutes = document.getElementById('numFlutes');
        const radialEngagement = document.getElementById('radialEngagement');
        const engagementValue = document.getElementById('engagementValue');
        const axialDepth = document.getElementById('axialDepth');
        const feedPerTooth = document.getElementById('feedPerTooth');
        const spindleSpeed = document.getElementById('spindleSpeed');
        const materialType = document.getElementById('materialType');
        const resetBtn = document.getElementById('resetBtn');
        const calculateBtn = document.getElementById('calculateBtn');
        const resultsPlaceholder = document.getElementById('resultsPlaceholder');
        const resultsContent = document.getElementById('resultsContent');
        const gaugeValue = document.getElementById('gaugeValue');
        const gaugeFill = document.getElementById('gaugeFill');
        const chipThickness = document.getElementById('chipThickness');
        const adjustedFeed = document.getElementById('adjustedFeed');
        const programmedFeed = document.getElementById('programmedFeed');
        const removalRate = document.getElementById('removalRate');
        const engagementVisual = document.getElementById('engagementVisual');
        
        // Unit conversion factors
        const mmToInch = 0.0393701;
        const inchToMm = 25.4;
        
        // Current unit system
        let isMetric = true;
        
        // Update engagement value display
        radialEngagement.addEventListener('input', () => {
            engagementValue.textContent = `${radialEngagement.value}%`;
            engagementVisual.style.width = `${radialEngagement.value / 2}%`;
        });
        
        // Toggle between metric and imperial units
        metricBtn.addEventListener('click', () => {
            if (!isMetric) {
                isMetric = true;
                metricBtn.classList.add('active');
                imperialBtn.classList.remove('active');
                
                // Update unit labels
                diameterUnit.textContent = '(mm)';
                axialUnit.textContent = '(mm)';
                feedUnit.textContent = '(mm)';
                
                // Convert values
                toolDiameter.value = (parseFloat(toolDiameter.value) * inchToMm).toFixed(2);
                axialDepth.value = (parseFloat(axialDepth.value) * inchToMm).toFixed(2);
                feedPerTooth.value = (parseFloat(feedPerTooth.value) * inchToMm).toFixed(3);
                
                // Update step values
                toolDiameter.step = '0.1';
                axialDepth.step = '0.1';
                feedPerTooth.step = '0.001';
            }
        });
        
        imperialBtn.addEventListener('click', () => {
            if (isMetric) {
                isMetric = false;
                imperialBtn.classList.add('active');
                metricBtn.classList.remove('active');
                
                // Update unit labels
                diameterUnit.textContent = '(inch)';
                axialUnit.textContent = '(inch)';
                feedUnit.textContent = '(inch)';
                
                // Convert values
                toolDiameter.value = (parseFloat(toolDiameter.value) * mmToInch).toFixed(4);
                axialDepth.value = (parseFloat(axialDepth.value) * mmToInch).toFixed(4);
                feedPerTooth.value = (parseFloat(feedPerTooth.value) * mmToInch).toFixed(5);
                
                // Update step values
                toolDiameter.step = '0.0001';
                axialDepth.step = '0.0001';
                feedPerTooth.step = '0.0001';
            }
        });
        
        // Reset calculator to default values
        resetBtn.addEventListener('click', () => {
            // Reset to default values
            if (isMetric) {
                toolDiameter.value = '10';
                axialDepth.value = '5';
                feedPerTooth.value = '0.1';
            } else {
                toolDiameter.value = '0.3937';
                axialDepth.value = '0.1969';
                feedPerTooth.value = '0.0039';
            }
            
            numFlutes.value = '4';
            radialEngagement.value = '50';
            engagementValue.textContent = '50%';
            spindleSpeed.value = '1000';
            materialType.value = '';
            
            // Reset visual
            engagementVisual.style.width = '25%';
            
            // Hide results
            resultsPlaceholder.style.display = 'flex';
            resultsContent.style.display = 'none';
        });
        
        // Calculate chip thinning
        calculateBtn.addEventListener('click', () => {
            // Get input values
            const diameter = parseFloat(toolDiameter.value);
            const flutes = parseInt(numFlutes.value);
            const engagement = parseFloat(radialEngagement.value) / 100; // Convert to decimal
            const axial = parseFloat(axialDepth.value);
            const feedTooth = parseFloat(feedPerTooth.value);
            const rpm = parseInt(spindleSpeed.value);
            
            // Validate inputs
            if (isNaN(diameter) || isNaN(flutes) || isNaN(engagement) || 
                isNaN(axial) || isNaN(feedTooth) || isNaN(rpm)) {
                alert('Please enter valid numerical values for all parameters.');
                return;
            }
            
            if (diameter <= 0 || flutes <= 0 || engagement <= 0 || 
                engagement > 1 || axial <= 0 || feedTooth <= 0 || rpm <= 0) {
                alert('All values must be positive. Engagement must be between 1% and 100%.');
                return;
            }
            
            // Calculate chip thinning factor
            // Formula: factor = √(D × ae - ae²) / ae
            // Where D is diameter and ae is radial engagement as a decimal of diameter
            const factor = Math.sqrt(diameter * engagement * diameter - engagement * engagement * diameter * diameter) / (engagement * diameter);
            
            // Calculate effective chip thickness (he = fz × factor)
            const effectiveChipThickness = feedTooth * factor;
            
            // Calculate programmed feed rate (mm/min or inch/min)
            const programmedFeedRate = feedTooth * flutes * rpm;
            
            // Calculate adjusted feed rate
            const adjustedFeedRate = programmedFeedRate / factor;
            
            // Calculate material removal rate (cubic mm/min or cubic inch/min)
            const removalRate = adjustedFeedRate * axial * engagement * diameter;
            
            // Display results
            resultsPlaceholder.style.display = 'none';
            resultsContent.style.display = 'block';
            
            // Update gauge
            const gaugePercentage = Math.min(factor, 2) * 126.8 / 2; // Max is 2 on the gauge
            gaugeFill.setAttribute('stroke-dasharray', `${gaugePercentage}, 126.8`);
            gaugeValue.textContent = factor.toFixed(2);
            
            // Update result values
            const unitSuffix = isMetric ? 'mm' : 'inch';
            const feedRateUnit = isMetric ? 'mm/min' : 'ipm';
            const volumeUnit = isMetric ? 'cm³/min' : 'in³/min';
            
            chipThickness.textContent = `${effectiveChipThickness.toFixed(4)} ${unitSuffix}`;
            adjustedFeed.textContent = `${adjustedFeedRate.toFixed(1)} ${feedRateUnit}`;
            programmedFeed.textContent = `${programmedFeedRate.toFixed(1)} ${feedRateUnit}`;
            
            // Convert to cm³/min or in³/min for display
            let displayRemovalRate;
            if (isMetric) {
                // Convert from mm³/min to cm³/min
                displayRemovalRate = removalRate / 1000;
            } else {
                // Already in in³/min
                displayRemovalRate = removalRate;
            }
            
            removalRate.textContent = `${displayRemovalRate.toFixed(2)} ${volumeUnit}`;
            
            // Update visual representation
            engagementVisual.style.width = `${radialEngagement.value / 2}%`;
            
            // Optional: Material-specific recommendations
            if (materialType.value) {
                checkMaterialRecommendations(materialType.value, effectiveChipThickness);
            }
        });
        
        // Material-specific recommendations
        function checkMaterialRecommendations(material, chipThickness) {
            // Define recommended chip thickness ranges for different materials
            const recommendations = {
                'aluminum': { min: 0.038, max: 0.127, unit: 'mm' }, // 0.0015-0.005"
                'steel-mild': { min: 0.025, max: 0.076, unit: 'mm' }, // 0.001-0.003"
                'steel-stainless': { min: 0.013, max: 0.051, unit: 'mm' }, // 0.0005-0.002"
                'titanium': { min: 0.013, max: 0.038, unit: 'mm' }, // 0.0005-0.0015"
                'plastic': { min: 0.051, max: 0.254, unit: 'mm' } // 0.002-0.010"
            };
            
            // Convert to current unit system
            let rec = recommendations[material];
            if (!isMetric) {
                rec.min *= mmToInch;
                rec.max *= mmToInch;
                rec.unit = 'inch';
            }
            
            // Check if chip thickness is within recommended range
            let message = '';
            if (chipThickness < rec.min) {
                message = `Warning: Chip thickness is below the recommended minimum (${rec.min.toFixed(4)} ${rec.unit}) for ${material}. This may lead to rubbing and poor surface finish.`;
            } else if (chipThickness > rec.max) {
                message = `Warning: Chip thickness exceeds the recommended maximum (${rec.max.toFixed(4)} ${rec.unit}) for ${material}. This may lead to tool breakage or reduced tool life.`;
            } else {
                message = `Chip thickness is within the recommended range for ${material}.`;
            }
            
            // Display the message (could be enhanced with a proper UI element)
            alert(message);
        }
        
        // Help button
        document.getElementById('helpBtn').addEventListener('click', () => {
            alert(
                'Radial Chip Thinning Calculator Help\n\n' +
                'This calculator helps optimize milling parameters by accounting for radial chip thinning. ' +
                'When the cutter engagement is less than 50% of the tool diameter, the actual chip thickness ' +
                'is reduced, requiring feed rate adjustment to maintain optimal cutting conditions.\n\n' +
                
                'How to use:\n' +
                '1. Enter your tool parameters (diameter, number of flutes)\n' +
                '2. Enter your cut parameters (engagement, depth, feed per tooth, speed)\n' +
                '3. Click Calculate to see the results\n\n' +
                
                'The results include:\n' +
                '- Chip Thinning Factor: The ratio between effective and programmed chip thickness\n' +
                '- Effective Chip Thickness: The actual chip thickness with thinning effect\n' +
                '- Adjusted Feed Rate: The feed rate needed to achieve desired chip thickness\n' +
                '- Material Removal Rate: The volume of material removed per minute'
            );
        });
        
        // Optional: Save configurations (would require additional UI and storage implementation)
        document.querySelector('.btn-save').addEventListener('click', () => {
            alert('Configuration saving feature will be implemented in a future update.');
        });
        
        // Initialize the calculator
        radialEngagement.dispatchEvent(new Event('input'));
    </script>
</body>
</html>
